install.packages("swirl")
library(swirl)
library(swirl)
swirl()
install_from_swirl("Statistical Inference")
swirl()
swirl()
swirl()
swirl()
36-3
1-(3/36)
deck
1/52
52
(1/13)^4
4/52
0
(3*4)/52
1/52
2/52
3/52
2/51
siwirl()
swirl()
library(swirl)
swirl()
swirl()
library(swirl)
swirl()
(2-1.6)^2/2
1.6*0.8/2
0.64/1
mypdf
integrate(mypdf,0,1.6)
((x^2)/4)/2
sqrt(4*.5)
0.997
0.997*.001/.985
info()
.985*.001/.997
.985*.001
.997*.001
.003*.001
.003*.999
.003*.001
.997*5
.997*.985
0.003*0.999
0.003*0.001
0.003*0.999*0.015
0.003*0.015
(1-99.7%)*(1-98.5%)
1-99.7%*1-98.5%
1-99.7%
(1-99.7/100)
(1-99.7/100)*(1-98.5/100)
info()
play()
nxt()
P(+)
0.015*0.999
.997*.001/(.997*.001+.015*.999)
sum(c(1:6)*1/6)
expect_dice()
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
.5*(edh+edl)
integrate(myfunc,0,2)
integrate(myfunc,0,2)
spop
integrate(t/2,0,2)
myfunc
mean(spop)
integrate(function(x){x/2},0,2)
allsam
apply(allsam,1,mean)
smeans
mean(smeans)
library("swirl")
swirl()
dice_sqr
ex2_fair<-dice_sqr*dice_fair
ex2_fair<-sum(dice_sqr*dice_fair)
ex2_fair-(3.5)^2
ex2_fair-3.5^2
sum(dice_sqr*dice_high)-edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
library(swirl)
swirl()
.8^3*.2^2+.8^4*.2*.8^5
choose(5,x)
choose(5,3)
choose(5,2)
choose(5,1)
choose(5,5)
choose(5,6)
for(i in 3:5) choose(5,x)*.8^x*.2^(5-x)
for(x in 3:5) choose(5,x)*.8^x*.2^(5-x)
a=0; for(x in 3:5) choose(5,x)*.8^x*.2^(5-x)
a=0; for(x in 3:5) a=a+choose(5,x)*.8^x*.2^(5-x)
a=0; for(x in 3:5) a=a+choose(5,x)*.8^x*.2^(5-x); a
pbinom(2,5,8,lower.tail = FALSE)
pbinom(2,size=5,.8,lower.tail = FALSE)
qnorm(0.1)
qnorm(.5)
qnorm(97.5,mean=3,sd=2)
qnorm(.975,mean=3,sd=2)
1.96*2+3
qnorm(1200,mean=1020,sd=50,lower.tail = FALSE)
pnorm(1200,mean=1020,sd=50,lower.tail = FALSE)
pnorm((1200-1020)/50,lower.tail = FALSE)
qnorm(.75,mean=1-2-,sd=50)
qnorm(.75,mean=1020,sd=50)
pnorm(qnorm(.53))
qnorm(pnorm(.53))
ppois(3,mean=2.5*4)
ppois(3,mean=(2.5*4))
ppois()
ppois
ppois(3,(2.5*4))
ppois(3,2.5*4)
pbinom(5,1000,.01)
ppois(5,1000*.01)
install.packages(c("BH", "curl", "digest", "ggplot2", "git2r", "htmltools", "jsonlite", "knitr", "plotrix", "qdapRegex", "raster", "Rcpp", "rJava", "rmarkdown", "rstudioapi", "stringdist", "tidyr"))
install.packages(c("BH", "curl", "digest", "ggplot2", "git2r",
install.packages(c("BH", "curl", "digest", "ggplot2", "git2r", "htmltools", "jsonlite", "knitr", "plotrix", "qdapRegex", "raster", "Rcpp", "rJava", "rmarkdown", "rstudioapi", "stringdist", "tidyr"))
devtools::install_github("rstudio/rmarkdown")
set.seed(500)
nosim <- 1000
lambda <- 0.2
n1 <- 40
sim1 <- matrix(rexp((nosim * n1), lambda), nosim)
s.var<-var(sim1)/(n1-1) #sample variance
var(sim1)
s.var<-mean(sim1)/(n1-1) #sample variance
t.var<-(1/lambda)^2/n1 #theoretical variance
library(swirl)
swirl()
myplot(2)
myplot(20)
myplot2(2)
qt(.975)
qt(.975,df)
qt(.975,2)
myplot2(20)
sleep
range(g1)
range(g2)
var(g2-g1)
difference<-g2-g1
mean(difference)
sd(difference)
s<-sd(difference)
mn+c(-1,1)qt(.975,9)*s/sqrt(n)
mn+c(-1,1)*qt(.975,9)*s/sqrt(n)
mn+c(-1,1)*qt(.975,9)*s/sqrt(9)
mn+c(-1,1)*qt(.975,9)*s/sqrt(10)
x$conf.int
x
t.test(difference)$conf.int
sp<-(8-1)(15.34)^2+(21-1)(18.23)^2
sp<-(8-1)*(15.34)^2+(21-1)*(18.23)^2
ns<-8+21*2
ns<-8+21-2
sp<-sqrt(sp/ns)
(132.86-127.44)+c(-1,1)*qt(.975,ns)*sp
(132.86-127.44)+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
sp<-sqrt(var(g1-g2)
)()
sp<-sqrt(var(g1-g2))
sp<-sqrt(9*var(g1)+9*var(g2)/18)
sp<-sqrt((9*var(g1)+9*var(g2))/18)
md+c(-1,1)*qt(.95,18)*sp*sqrt(1/10+1/10)
md+c(-1,1)*qt(.95,18)*sp*sqrt(1/5)
md+c(-1,1)*qt(.975,18)*sp*sqrt(1/10+1/10)
t.test(g1,g2,paired=FALSE,var.equal = TRUE)$conf
t.test(g2,g1,paired=FALSE,var.equal = TRUE)$conf
t.test(g2,g1,paired=TRUE,var.equal = TRUE)$conf
t.test(g2,g1,paired=TRUE)$conf
num<-8+21-2
num<-(15.34^2/8+18.23^2/21)^2
den<-15.34-18.23+c(-1,1)*qt(.975,8+21-2)*num
den<-15.3434^4/8^2/7+18.23^4/21^2/20
den<-(15.3434^4/8^2/7)+(18.23^4/21^2/20)
den<-15.34^4/8^2/7+18.23^4/21^2/20
mydf<-num/den
qt(.975,mydf)
132.86-127.44 +c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8 + 18.23^2/21)
10/sqrt(32)
s/sqrt(n)
10/sqrt(100)
swirl()
swirl()
swirl()
swirl()
(32-30)/(10/sqrt(100))
swirl()
(32-30)/(10/sqrt(16))
15
qt(.95,15)
dim(fs)
t.test(fs)
t.test(fs$sheight-fs$fheight)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
6
7
8
pt(2.5,15)
pt(2.5,15,lower.tail = FALSE)
qnorm(0.975)
qnorm(0.95)
qnorm(0.99)
pt(2)
pnorm(2)
pnorm(2,lower.tail = FALSE)
mybin
pbinom(6,8,.5,FALSE)
pbinom(7,TRUE)
pbinom(7,lower.tail=TRUE)
pbinom(7,8,.5)
ppois(9,5,FALSE)
swirl()
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
z<-qnorm(.95)
pnorm(30+z,30,FALSE)
pnorm(30+z,mean=30,lower.tail=FALSE)
pnorm(30+z,mean=32,lower.tail=FALSE)
pnorm(30+z,mean=32,sd=1,lower.tail = FALSE)
pnorm(30+z*2,mean=32,sd=2,lower.tail = FALSE)
power.t.test(n = 16, delta = 2 / 4, sd=1, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 2, sd=4, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 100, sd=200, type = "one.sample", alt = "one.sided")$power
power.t.test(power = .8, delta = 2 / 4, sd=1, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 2, sd=4, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 100, sd=200, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, n=26, sd=1, type = "one.sample", alt = "one.sided")$delta
power.t.test(power = .8, n=27, sd=1, type = "one.sample", alt = "one.sided")$delta
head(pvalues)
head(pValues)
sum(pVluaes)
sum(pVlaues)
sum(pValues)
sum(pValues<.05)
sum(p.adjust="bonferroni")
sum(p.adjust.methods="bonferroni")
sum(p.Values<.-5)
sum(p.Values<.05)
sum(pVlaues)
?sum
sum(pValues,methods="bonferroni")
k
sum(p.adjust(pValues,method="bonferroni") < 0.05)
BH
n
sum(p.adjust(pValues,method="BH") < 0.05)
tail(1000-long)
n
f
g
tail(trueStatus)
b
n
table(pValues2 < 0.05, trueStatus)
1.96
24/500
n
table(p.adjust(pValues2,method="bonferroni") < 0.05, trueStatus)
n
table(p.adjust(pValues2,method="BH") < 0.05, trueStatus)
3.5
print(g2)
head(sh)
length(sh)
nh
median(resampledMedians)
median(sh)
fnh*B
fh
sam <- sample(fh,nh*B,replace=TRUE)
n
resam <- matrix(sam,B,nh)
n
meds <- apply(resam,1,median)
n
median(meds)-median(fh) or median(fh)-median(meds)
median(meds)-median(fh)
n
sd(meds)
n
sd(resampledMedians)
n
quantile(resampledMedians,c(.025,.975))
n
quantile(meds,c(.025,.975))
dim(InsectSprays)
names(Intsectsprys)
names(Intsectsprays)
names(Insectsprays)
names(InsectSprays)
range(Bdata$count)
n
range(Cdata$count)
BCcounts
n
v
c
group
b
n
testStat()
swirl()
testStat
n
obs <- testStat(BCcounts,group)
obs
mean(Bdata$count-Cdata$count)
sample
now
n
sample(group)
perms <- sapply(1 : 10000,
| function(i) testStat(BCcounts, sample(group)))
perms <- sapply(1 : 10000,| function(i) testStat(BCcounts, sample(group)))
perms <- sapply(1 : 10000| function(i) testStat(BCcounts, sample(group)))
n
perms <- sapply(1 : 10000, function(i) testStat(BCcounts, sample(group))) at the command
| prompt
perms <- sapply(1 : 10000, function(i) testStat(BCcounts, sample(group)))
perms>obs
mean(perms>obs)
testrstat
teststat
testStat
testStat(DEcounts,group)
perms <- sapply(1 : 10000, function(i) testStat(DEcounts,sample(group)))
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
for(i in 1:4){w[i]*(x[i]-mean(x))^2}
c<-0
for(i in 1:4){c=c+w[i]*(x[i]-mean(x))^2};print c
for(i in 1:4){c=c+w[i]*(x[i]-mean(x))^2};print(c)
c<-0
for(i in 1:4){c=c+(w[i]*(x[i]-mean(x))^2)};print(c)
c<-0
for(i in 1:4){c=c+(w[i]*(x[i]-mean(x))^2)};print(c)
mean(n)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
mean(w*x)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
cor(y,x)
cor(x,u)
cor(x,y)
1/cor(x,y)
x<-c(0,x)
y<-c(0,y)
cor(x,y)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
cor(x-mean(x),y-mean(y))
1/cor(x-mean(x),y-mean(y))
cor(x-mean(x),y-mean(y))*sd(x)/sd(y)
cor(x,y)*sd(x)/sd(y)
cor(x,y)*sd(y)/sd(x)
cor(y,x)*sd(y)/sd(x)
cor(y,x)*sd(y)/sd(x)
data(mtcars)
mtcars
head(mtcars)
y<-mtcars$mpg;x<-mtcars$weight
cor(y,x)*sd(y)/sd(x)
x
y<-mtcars$mpg
x<-mtcars$wt
cor(y,x)*sd(y)/sd(x)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
(x[1]-mean(x))/length(x)
(x[1]-mean(x))/length(x-1)
(x[1]-mean(x))/length(x)-1
(x[1]-mean(x))/(length(x)-1)
(x[1]-mean(x))/sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
cor(x,y)*sd(y)/sd(x)
mean(y)-(cor(x,y)*sd(y)/sd(x))*mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
mean(x)
mean(x*w)
mean(x^2*w)
mean(x*sqrt(w))
mean(x)/mean(w)
mean(x)*mean(w)
mu=c(0.1471,0.0025,0.300,1.077)
c=0
for(j in 1:4){c=0;for(i in 1:4){c=c+w[i]*(x[i]-mu[j])*2};print(c)}
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
cor(y,x)*sd(x)/sd(y)
cor(x,y)*sd(x)/sd(y)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
c<-0
c=0;for(i in 1:4){c<-c+w[i]*(x[i]-mu)^2};print(c)
mu=0.0025
c=0;for(i in 1:4){c<-c+w[i]*(x[i]-mu)^2};print(c)
mu=1.077
c=0;for(i in 1:4){c<-c+w[i]*(x[i]-mu)^2};print(c)
mu=0.1471
c=0;for(i in 1:4){c<-c+w[i]*(x[i]-mu)^2};print(c)
mu=0.300
c=0;for(i in 1:4){c<-c+w[i]*(x[i]-mu)^2};print(c)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
?cor
cor(y,x)
cor(y,x)*sd(y)/sd(x)
data("mtcars")
mtcars
head(mtcars)
head(mtcars,1)
cor(mtcars$mpg,mtcars$wt)*sd(mtcars$mpg)/sd(mtcars$wt)
.5*1/0.5
sd
.4*1/1*1.5
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
y-(cor(y,x)*sd(y)/sd(x))*x
mean(y)-(cor(y,x)*sd(y)/sd(x))*mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mu=.44;c=0;for(i in 1:length(x)){c<-c+(x[i]-mu)^2};print(c)
mu=.573;c=0;for(i in 1:length(x)){c<-c+(x[i]-mu)^2};print(c)
mu=.36;c=0;for(i in 1:length(x)){c<-c+(x[i]-mu)^2};print(c)
mu=.8;c=0;for(i in 1:length(x)){c<-c+(x[i]-mu)^2};print(c)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
cor(x,y)*sd(x)/sd(y)
sd(x)/sd(y)
mean(x)
c=0;for(i in 1:length(x)){c=c+(x[i]-mean(x))};print(c)
d=0;for(i in 1:length(x)){c=c+(y[i]-mean(y))};print(d)
d=0;for(i in 1:length(y)){c=c+(y[i]-mean(y))};print(d)
c=0;for(i in 1:length(x)){c=c+(x[i]-mean(x))^2};print(c)
d=0;for(i in 1:length(y)){c=c+(y[i]-mean(y))^2};print(d)
mean(y)
c=0;for(i in 1:length(x)){c=c+(x[i]-mean(x))^2};print(c)
d=0;for(i in 1:length(y)){d=d+(y[i]-mean(y))^2};print(d)
c/d
d/c
cor(y,x)*sd(y)/sd(x)
cor(x,y)*sd(x)/sd(y)
c=0;for(i in 1:length(x)){c=c+(x[i])^2};print(c)
d=0;for(i in 1:length(y)){d=d+(y[i])^2};print(d)
c/d;d/c
cor(x,y)
beta=0.59915;c=0;for(i in 1:length(y)){c=c+(x[i]-y[i]*beta)^2};print(c)
beta=-1.713;c=0;for(i in 1:length(y)){c=c+(x[i]-y[i]*beta)^2};print(c)
beta=0.8263;c=0;for(i in 1:length(y)){c=c+(x[i]-y[i]*beta)^2};print(c)
beta=-0.04462;c=0;for(i in 1:length(y)){c=c+(x[i]-y[i]*beta)^2};print(c)
beta=0.59915;c=0;for(i in 1:length(x)){c=c+(x[i]-y[i]*beta)^2};print(c)
beta=0.59915;c=0;for(i in 1:length(x)){c=c+(y[i]-x[i]*beta)^2};print(c)
beta=-1.713;c=0;for(i in 1:length(x)){c=c+(y[i]-x[i]*beta)^2};print(c)
beta=0.8263;c=0;for(i in 1:length(x)){c=c+(y[i]-x[i]*beta)^2};print(c)
beta=-0.04462;c=0;for(i in 1:length(x)){c=c+(y[i]-x[i]*beta)^2};print(c)
?update
?Rupdate
?updater
?check.for.updates.R()
check.for.updates.R()
updateR()
sessionInfo()
install.packages(c("curl", "devtools", "evaluate", "formatR", "ggplot2", "git2r", "gridExtra", "gtable", "htmltools", "httr", "knitr", "memoise", "munsell", "NLP", "openNLP", "packrat", "pacman", "R6", "Rcpp", "RCurl", "rmarkdown", "rsconnect", "rstudioapi", "scales", "sp", "swirl", "testthat", "tidyr", "XML", "xtable"))
install.packages(c("curl", "devtools", "evaluate", "formatR",
install.packages(c("curl", "devtools", "evaluate", "formatR", "ggplot2", "git2r", "gridExtra", "gtable", "htmltools", "httr", "knitr", "memoise", "munsell", "NLP", "openNLP", "packrat", "pacman", "R6", "Rcpp", "RCurl", "rmarkdown", "rsconnect", "rstudioapi", "scales", "sp", "swirl", "testthat", "tidyr", "XML", "xtable"))
install.packages(c("curl", "devtools", "evaluate", "formatR",
install.packages(c("curl", "devtools", "evaluate", "formatR", "ggplot2", "git2r", "gridExtra", "gtable", "htmltools", "httr", "knitr", "memoise", "munsell", "NLP", "openNLP", "packrat", "pacman", "R6", "Rcpp", "RCurl", "rmarkdown", "rsconnect", "rstudioapi", "scales", "sp", "swirl", "testthat", "tidyr", "XML", "xtable"))
install.packages(c("curl", "devtools", "evaluate", "formatR",
install.packages("scales")
setwd("E:/SkyDrive/GitHub/tp_traffic")
source('E:/SkyDrive/GitHub/tp_traffic/tp_traffic.R')
tp_traffic_go()
tp_traffic_go()
tp_traffic_go()
tp_traffic_go()
tp_traffic_go()
tp_traffic_go()
tp_traffic_go()
source('E:/SkyDrive/GitHub/tp_traffic_parse/tp_traffic_code/tp_traffic_parse.R')
source('E:/SkyDrive/GitHub/tp_traffic_parse/tp_traffic_code/tp_traffic.R')
setwd("E:/SkyDrive/GitHub/tp_traffic_parse/tp_traffic_code")
source('E:/SkyDrive/GitHub/tp_traffic_parse/tp_traffic_code/tp_traffic.R')
tp_traffic_go()
tp_traffic_go()
